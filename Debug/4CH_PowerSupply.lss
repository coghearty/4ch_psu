
4CH_PowerSupply.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  00000a82  00000b16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a82  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800164  00800164  00000b7a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b7a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bd8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000c14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001780  00000000  00000000  00000d14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c21  00000000  00000000  00002494  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ad8  00000000  00000000  000030b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003b90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005da  00000000  00000000  00003d90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000069f  00000000  00000000  0000436a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004a09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   8:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  14:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  24:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  2c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  54:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  58:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  5c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  60:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  64:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  68:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  6c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  70:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  74:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  78:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  7c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  80:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  84:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  88:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e8       	ldi	r30, 0x82	; 130
  a0:	fa e0       	ldi	r31, 0x0A	; 10
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	a4 36       	cpi	r26, 0x64	; 100
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
  ae:	21 e0       	ldi	r18, 0x01	; 1
  b0:	a4 e6       	ldi	r26, 0x64	; 100
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
  b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
  b8:	aa 36       	cpi	r26, 0x6A	; 106
  ba:	b2 07       	cpc	r27, r18
  bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
  be:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
  c2:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <_exit>

000000c6 <__bad_interrupt>:
  c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <i2c_transmit>:
	r_val=1;
	i2c_quit:
	// Send Stop Condition
	twi_status=i2c_transmit(I2C_STOP);
	return r_val;
}
  ca:	81 30       	cpi	r24, 0x01	; 1
  cc:	41 f0       	breq	.+16     	; 0xde <i2c_transmit+0x14>
  ce:	18 f0       	brcs	.+6      	; 0xd6 <i2c_transmit+0xc>
  d0:	82 30       	cpi	r24, 0x02	; 2
  d2:	49 f0       	breq	.+18     	; 0xe6 <i2c_transmit+0x1c>
  d4:	0d c0       	rjmp	.+26     	; 0xf0 <i2c_transmit+0x26>
  d6:	84 ea       	ldi	r24, 0xA4	; 164
  d8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  dc:	09 c0       	rjmp	.+18     	; 0xf0 <i2c_transmit+0x26>
  de:	84 e8       	ldi	r24, 0x84	; 132
  e0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  e4:	05 c0       	rjmp	.+10     	; 0xf0 <i2c_transmit+0x26>
  e6:	84 e9       	ldi	r24, 0x94	; 148
  e8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	08 95       	ret
  f0:	e4 e7       	ldi	r30, 0x74	; 116
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	88 23       	and	r24, r24
  f8:	ec f7       	brge	.-6      	; 0xf4 <i2c_transmit+0x2a>
  fa:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
  fe:	88 7f       	andi	r24, 0xF8	; 248
 100:	08 95       	ret

00000102 <i2c_writebyte>:
 102:	cf 92       	push	r12
 104:	df 92       	push	r13
 106:	ef 92       	push	r14
 108:	ff 92       	push	r15
 10a:	0f 93       	push	r16
 10c:	1f 93       	push	r17
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	d6 2e       	mov	r13, r22
 114:	c4 2e       	mov	r12, r20
 116:	f8 2e       	mov	r15, r24
 118:	ff 0c       	add	r15, r15
 11a:	c2 e3       	ldi	r28, 0x32	; 50
 11c:	d2 e0       	ldi	r29, 0x02	; 2
 11e:	03 e7       	ldi	r16, 0x73	; 115
 120:	10 e0       	ldi	r17, 0x00	; 0
 122:	68 94       	set
 124:	ee 24       	eor	r14, r14
 126:	e2 f8       	bld	r14, 2
 128:	08 c0       	rjmp	.+16     	; 0x13a <i2c_writebyte+0x38>
 12a:	de 2d       	mov	r29, r14
 12c:	01 c0       	rjmp	.+2      	; 0x130 <i2c_writebyte+0x2e>
 12e:	de 2d       	mov	r29, r14
 130:	c1 50       	subi	r28, 0x01	; 1
 132:	19 f4       	brne	.+6      	; 0x13a <i2c_writebyte+0x38>
 134:	8d 2f       	mov	r24, r29
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	30 c0       	rjmp	.+96     	; 0x19a <i2c_writebyte+0x98>
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	0e 94 65 00 	call	0xca	; 0xca <i2c_transmit>
 140:	88 33       	cpi	r24, 0x38	; 56
 142:	b1 f3       	breq	.-20     	; 0x130 <i2c_writebyte+0x2e>
 144:	88 30       	cpi	r24, 0x08	; 8
 146:	11 f0       	breq	.+4      	; 0x14c <i2c_writebyte+0x4a>
 148:	80 31       	cpi	r24, 0x10	; 16
 14a:	d9 f4       	brne	.+54     	; 0x182 <i2c_writebyte+0x80>
 14c:	f8 01       	movw	r30, r16
 14e:	f0 82       	st	Z, r15
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	0e 94 65 00 	call	0xca	; 0xca <i2c_transmit>
 156:	80 32       	cpi	r24, 0x20	; 32
 158:	41 f3       	breq	.-48     	; 0x12a <i2c_writebyte+0x28>
 15a:	88 33       	cpi	r24, 0x38	; 56
 15c:	41 f3       	breq	.-48     	; 0x12e <i2c_writebyte+0x2c>
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 f4       	brne	.+36     	; 0x186 <i2c_writebyte+0x84>
 162:	d0 92 73 00 	sts	0x0073, r13	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	0e 94 65 00 	call	0xca	; 0xca <i2c_transmit>
 16c:	88 32       	cpi	r24, 0x28	; 40
 16e:	69 f4       	brne	.+26     	; 0x18a <i2c_writebyte+0x88>
 170:	c0 92 73 00 	sts	0x0073, r12	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	0e 94 65 00 	call	0xca	; 0xca <i2c_transmit>
 17a:	88 32       	cpi	r24, 0x28	; 40
 17c:	41 f4       	brne	.+16     	; 0x18e <i2c_writebyte+0x8c>
 17e:	c1 e0       	ldi	r28, 0x01	; 1
 180:	07 c0       	rjmp	.+14     	; 0x190 <i2c_writebyte+0x8e>
 182:	c3 e0       	ldi	r28, 0x03	; 3
 184:	05 c0       	rjmp	.+10     	; 0x190 <i2c_writebyte+0x8e>
 186:	c5 e0       	ldi	r28, 0x05	; 5
 188:	03 c0       	rjmp	.+6      	; 0x190 <i2c_writebyte+0x8e>
 18a:	c6 e0       	ldi	r28, 0x06	; 6
 18c:	01 c0       	rjmp	.+2      	; 0x190 <i2c_writebyte+0x8e>
 18e:	c7 e0       	ldi	r28, 0x07	; 7
 190:	82 e0       	ldi	r24, 0x02	; 2
 192:	0e 94 65 00 	call	0xca	; 0xca <i2c_transmit>
 196:	8c 2f       	mov	r24, r28
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	1f 91       	pop	r17
 1a0:	0f 91       	pop	r16
 1a2:	ff 90       	pop	r15
 1a4:	ef 90       	pop	r14
 1a6:	df 90       	pop	r13
 1a8:	cf 90       	pop	r12
 1aa:	08 95       	ret

000001ac <init_i2c>:

void init_i2c(void){
  /* Initial TWI Peripheral */
  TWSR = 0x00;   // Select Prescaler of 1
 1ac:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
  // SCL frequency = 11059200 / (16 + 2 * 48 * 1) = 98.743 khz
  TWBR = 0x30;   // 48 Decimal
 1b0:	80 e3       	ldi	r24, 0x30	; 48
 1b2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 1b6:	08 95       	ret

000001b8 <main>:
 }


int main(void)
{
	unsigned char ResetSrc = MCUCSR;   // save reset source
 1b8:	c4 b7       	in	r28, 0x34	; 52
	MCUCSR = 0x00;  // cleared for next reset detection
 1ba:	14 be       	out	0x34, r1	; 52
#include "i2c_comms.h"



static void init_ports(void){
 	PORTA = 0x00;
 1bc:	1b ba       	out	0x1b, r1	; 27
	DDRA = EN_PWR | CH1_BOOST | CH1_EN | CH2_BOOST | CH2_EN | CH3_BOOST;	//set direction register
 1be:	8b ed       	ldi	r24, 0xDB	; 219
 1c0:	8a bb       	out	0x1a, r24	; 26
 	PORTA = CH1_ILIM | CH2_ILIM;	//set internal pull-up resistors for inputs
 1c2:	84 e2       	ldi	r24, 0x24	; 36
 1c4:	8b bb       	out	0x1b, r24	; 27
 		
	DDRB = CH1_ISET | CH2_ISET | CH3_ISET | CH4_ISET;
 1c6:	90 ef       	ldi	r25, 0xF0	; 240
 1c8:	97 bb       	out	0x17, r25	; 23
 	PORTB = 0x00;
 1ca:	18 ba       	out	0x18, r1	; 24
 	
	PORTC = 0x00;
 1cc:	15 ba       	out	0x15, r1	; 21
 	DDRC |= WIFI_EN | LED_GRN | LED_RED | CH4_EN | CH4_BOOST | CH3_EN;
 1ce:	84 b3       	in	r24, 0x14	; 20
 1d0:	8f 66       	ori	r24, 0x6F	; 111
 1d2:	84 bb       	out	0x14, r24	; 20
 	PORTC = LED_GRN | LED_RED;		//set initial output state high
 1d4:	86 e0       	ldi	r24, 0x06	; 6
 1d6:	85 bb       	out	0x15, r24	; 21
 	PORTC |= CH4_ILIM | CH3_ILIM;	//set input pull-up resistors
 1d8:	85 b3       	in	r24, 0x15	; 21
 1da:	80 69       	ori	r24, 0x90	; 144
 1dc:	85 bb       	out	0x15, r24	; 21
 	
 	DDRD |= SW_AUTO | SW_OFF | SW_ON | PB_SNOOZE;
 1de:	81 b3       	in	r24, 0x11	; 17
 1e0:	80 6f       	ori	r24, 0xF0	; 240
 1e2:	81 bb       	out	0x11, r24	; 17
 	PORTD = SW_AUTO | SW_OFF | SW_ON | PB_SNOOZE;	//set input pull-up resistors
 1e4:	92 bb       	out	0x12, r25	; 18
	 
	DDRE |= SW_ENC1 | SW_ENC2 | ENC1B | ENC1A | ENC2B | ENC2A;
 1e6:	82 b1       	in	r24, 0x02	; 2
 1e8:	8c 6f       	ori	r24, 0xFC	; 252
 1ea:	82 b9       	out	0x02, r24	; 2
	PORTE |= SW_ENC1 | SW_ENC2;
 1ec:	83 b1       	in	r24, 0x03	; 3
 1ee:	8c 60       	ori	r24, 0x0C	; 12
 1f0:	83 b9       	out	0x03, r24	; 3
 }
 
 static void set_initial_IO_states(void){
	 /*start with all LEDs off*/
	 CH1_led(0);
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <CH1_led>
	 CH2_led(0);
 1f8:	80 e0       	ldi	r24, 0x00	; 0
 1fa:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <CH2_led>
	 CH3_led(0);
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	0e 94 ef 01 	call	0x3de	; 0x3de <CH3_led>
	 CH4_led(0);
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	0e 94 f5 01 	call	0x3ea	; 0x3ea <CH4_led>
	 /*ensure all boost modes are off*/
	 CH1_boost(0);
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	0e 94 07 02 	call	0x40e	; 0x40e <CH1_boost>
	 CH2_boost(0);
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	0e 94 0d 02 	call	0x41a	; 0x41a <CH2_boost>
	 CH3_boost(0);
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	0e 94 13 02 	call	0x426	; 0x426 <CH3_boost>
	 CH4_boost(0);
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	0e 94 19 02 	call	0x432	; 0x432 <CH4_boost>
	 /*ensure main power is disabled*/
	 EN_power(0);
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	0e 94 1f 02 	call	0x43e	; 0x43e <EN_power>
	 /*ensure wifi is off*/
	 EN_wifi(0);
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	0e 94 25 02 	call	0x44a	; 0x44a <EN_wifi>
	MCUCSR = 0x00;  // cleared for next reset detection

	init_ports();
	set_initial_IO_states();
	
	init_PC_serial(MYUBRR);
 22e:	8c e0       	ldi	r24, 0x0C	; 12
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	0e 94 2b 02 	call	0x456	; 0x456 <init_PC_serial>
	init_i2c();
 236:	0e 94 d6 00 	call	0x1ac	; 0x1ac <init_i2c>
	int rv;
#define CH1_DAC_ID    0x90        // I2C 24AA128 EEPROM Device Identifier
#define CH1_DAC_ADDR  0x06        // I2C 24AA128 EEPROM Device Address
#define CH1_DA_ADDR		0x4E

	stdout = &usart_output;
 23a:	e4 e6       	ldi	r30, 0x64	; 100
 23c:	f1 e0       	ldi	r31, 0x01	; 1
 23e:	8e e0       	ldi	r24, 0x0E	; 14
 240:	91 e0       	ldi	r25, 0x01	; 1
 242:	93 83       	std	Z+3, r25	; 0x03
 244:	82 83       	std	Z+2, r24	; 0x02
	stdin  = &usart_input;
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	91 e0       	ldi	r25, 0x01	; 1
 24a:	91 83       	std	Z+1, r25	; 0x01
 24c:	80 83       	st	Z, r24
	char input;
	
	/*print out the last reset cause*/
	if (ResetSrc & PORF)
	puts("PWR RESET\n\r");
	if (ResetSrc & EXTRF)
 24e:	c0 ff       	sbrs	r28, 0
 250:	04 c0       	rjmp	.+8      	; 0x25a <main+0xa2>
	puts("EXT RESET\n\r");
 252:	8c e1       	ldi	r24, 0x1C	; 28
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <puts>
	if (ResetSrc & BORF)
 25a:	c1 ff       	sbrs	r28, 1
 25c:	04 c0       	rjmp	.+8      	; 0x266 <main+0xae>
	puts("BOD RESET\n\r");
 25e:	88 e2       	ldi	r24, 0x28	; 40
 260:	91 e0       	ldi	r25, 0x01	; 1
 262:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <puts>
	if (ResetSrc & WDRF)
 266:	c3 70       	andi	r28, 0x03	; 3
 268:	21 f0       	breq	.+8      	; 0x272 <main+0xba>
	puts("WDT RESET\n\r");
 26a:	84 e3       	ldi	r24, 0x34	; 52
 26c:	91 e0       	ldi	r25, 0x01	; 1
 26e:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <puts>
	
	red_led(1);
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	0e 94 01 02 	call	0x402	; 0x402 <red_led>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 278:	2f e9       	ldi	r18, 0x9F	; 159
 27a:	86 e8       	ldi	r24, 0x86	; 134
 27c:	91 e0       	ldi	r25, 0x01	; 1
 27e:	21 50       	subi	r18, 0x01	; 1
 280:	80 40       	sbci	r24, 0x00	; 0
 282:	90 40       	sbci	r25, 0x00	; 0
 284:	e1 f7       	brne	.-8      	; 0x27e <main+0xc6>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0xd0>
 288:	00 00       	nop
	_delay_ms(500);
	red_led(0);
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	0e 94 01 02 	call	0x402	; 0x402 <red_led>
 290:	2f e9       	ldi	r18, 0x9F	; 159
 292:	86 e8       	ldi	r24, 0x86	; 134
 294:	91 e0       	ldi	r25, 0x01	; 1
 296:	21 50       	subi	r18, 0x01	; 1
 298:	80 40       	sbci	r24, 0x00	; 0
 29a:	90 40       	sbci	r25, 0x00	; 0
 29c:	e1 f7       	brne	.-8      	; 0x296 <main+0xde>
 29e:	00 c0       	rjmp	.+0      	; 0x2a0 <main+0xe8>
 2a0:	00 00       	nop
	_delay_ms(500);	
	green_led(1);
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <green_led>
 2a8:	2f e9       	ldi	r18, 0x9F	; 159
 2aa:	86 e8       	ldi	r24, 0x86	; 134
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	21 50       	subi	r18, 0x01	; 1
 2b0:	80 40       	sbci	r24, 0x00	; 0
 2b2:	90 40       	sbci	r25, 0x00	; 0
 2b4:	e1 f7       	brne	.-8      	; 0x2ae <main+0xf6>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <main+0x100>
 2b8:	00 00       	nop
	_delay_ms(500);
	green_led(0);
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <green_led>
 2c0:	2f e9       	ldi	r18, 0x9F	; 159
 2c2:	86 e8       	ldi	r24, 0x86	; 134
 2c4:	91 e0       	ldi	r25, 0x01	; 1
 2c6:	21 50       	subi	r18, 0x01	; 1
 2c8:	80 40       	sbci	r24, 0x00	; 0
 2ca:	90 40       	sbci	r25, 0x00	; 0
 2cc:	e1 f7       	brne	.-8      	; 0x2c6 <main+0x10e>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <main+0x118>
 2d0:	00 00       	nop
		CH4_led(0);
		green_led(0);
		red_led(0);
puts("Hello world!");
		rv = i2c_writebyte(CH1_DA_ADDR,buffer[0],buffer[1]);
printf("i2c write return: %i\n", rv);		
 2d2:	cd e4       	ldi	r28, 0x4D	; 77
 2d4:	d1 e0       	ldi	r29, 0x01	; 1
char buffer[2]= {0b00000000,0b11110000};
	
    while (1) 
    {

		CH1_led(1);
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <CH1_led>
 2dc:	2f e3       	ldi	r18, 0x3F	; 63
 2de:	8d e0       	ldi	r24, 0x0D	; 13
 2e0:	93 e0       	ldi	r25, 0x03	; 3
 2e2:	21 50       	subi	r18, 0x01	; 1
 2e4:	80 40       	sbci	r24, 0x00	; 0
 2e6:	90 40       	sbci	r25, 0x00	; 0
 2e8:	e1 f7       	brne	.-8      	; 0x2e2 <main+0x12a>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <main+0x134>
 2ec:	00 00       	nop
		_delay_ms(DELAY_TIME);
		CH2_led(1);
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <CH2_led>
 2f4:	2f e3       	ldi	r18, 0x3F	; 63
 2f6:	8d e0       	ldi	r24, 0x0D	; 13
 2f8:	93 e0       	ldi	r25, 0x03	; 3
 2fa:	21 50       	subi	r18, 0x01	; 1
 2fc:	80 40       	sbci	r24, 0x00	; 0
 2fe:	90 40       	sbci	r25, 0x00	; 0
 300:	e1 f7       	brne	.-8      	; 0x2fa <main+0x142>
 302:	00 c0       	rjmp	.+0      	; 0x304 <main+0x14c>
 304:	00 00       	nop
		//EN_power(1);
		_delay_ms(DELAY_TIME);
		CH3_led(1);
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	0e 94 ef 01 	call	0x3de	; 0x3de <CH3_led>
 30c:	2f e3       	ldi	r18, 0x3F	; 63
 30e:	8d e0       	ldi	r24, 0x0D	; 13
 310:	93 e0       	ldi	r25, 0x03	; 3
 312:	21 50       	subi	r18, 0x01	; 1
 314:	80 40       	sbci	r24, 0x00	; 0
 316:	90 40       	sbci	r25, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0x15a>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0x164>
 31c:	00 00       	nop
		_delay_ms(DELAY_TIME);
		CH4_led(1);
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	0e 94 f5 01 	call	0x3ea	; 0x3ea <CH4_led>
 324:	2f e3       	ldi	r18, 0x3F	; 63
 326:	8d e0       	ldi	r24, 0x0D	; 13
 328:	93 e0       	ldi	r25, 0x03	; 3
 32a:	21 50       	subi	r18, 0x01	; 1
 32c:	80 40       	sbci	r24, 0x00	; 0
 32e:	90 40       	sbci	r25, 0x00	; 0
 330:	e1 f7       	brne	.-8      	; 0x32a <main+0x172>
 332:	00 c0       	rjmp	.+0      	; 0x334 <main+0x17c>
 334:	00 00       	nop
		_delay_ms(DELAY_TIME);	
		green_led(1);
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <green_led>
 33c:	2f e3       	ldi	r18, 0x3F	; 63
 33e:	8d e0       	ldi	r24, 0x0D	; 13
 340:	93 e0       	ldi	r25, 0x03	; 3
 342:	21 50       	subi	r18, 0x01	; 1
 344:	80 40       	sbci	r24, 0x00	; 0
 346:	90 40       	sbci	r25, 0x00	; 0
 348:	e1 f7       	brne	.-8      	; 0x342 <main+0x18a>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <main+0x194>
 34c:	00 00       	nop
		_delay_ms(DELAY_TIME);
		red_led(1);
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	0e 94 01 02 	call	0x402	; 0x402 <red_led>
 354:	2f e3       	ldi	r18, 0x3F	; 63
 356:	8d e0       	ldi	r24, 0x0D	; 13
 358:	93 e0       	ldi	r25, 0x03	; 3
 35a:	21 50       	subi	r18, 0x01	; 1
 35c:	80 40       	sbci	r24, 0x00	; 0
 35e:	90 40       	sbci	r25, 0x00	; 0
 360:	e1 f7       	brne	.-8      	; 0x35a <main+0x1a2>
 362:	00 c0       	rjmp	.+0      	; 0x364 <main+0x1ac>
 364:	00 00       	nop
		_delay_ms(DELAY_TIME);
		CH1_led(0);
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <CH1_led>
		CH2_led(0);
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <CH2_led>
		CH3_led(0);
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 ef 01 	call	0x3de	; 0x3de <CH3_led>
		CH4_led(0);
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <CH4_led>
		green_led(0);
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <green_led>
		red_led(0);
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	0e 94 01 02 	call	0x402	; 0x402 <red_led>
puts("Hello world!");
 38a:	80 e4       	ldi	r24, 0x40	; 64
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <puts>
		rv = i2c_writebyte(CH1_DA_ADDR,buffer[0],buffer[1]);
 392:	40 ef       	ldi	r20, 0xF0	; 240
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	8e e4       	ldi	r24, 0x4E	; 78
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 81 00 	call	0x102	; 0x102 <i2c_writebyte>
printf("i2c write return: %i\n", rv);		
 39e:	9f 93       	push	r25
 3a0:	8f 93       	push	r24
 3a2:	df 93       	push	r29
 3a4:	cf 93       	push	r28
 3a6:	0e 94 44 02 	call	0x488	; 0x488 <printf>
 3aa:	9f e7       	ldi	r25, 0x7F	; 127
 3ac:	2a e1       	ldi	r18, 0x1A	; 26
 3ae:	86 e0       	ldi	r24, 0x06	; 6
 3b0:	91 50       	subi	r25, 0x01	; 1
 3b2:	20 40       	sbci	r18, 0x00	; 0
 3b4:	80 40       	sbci	r24, 0x00	; 0
 3b6:	e1 f7       	brne	.-8      	; 0x3b0 <main+0x1f8>
 3b8:	00 c0       	rjmp	.+0      	; 0x3ba <main+0x202>
 3ba:	00 00       	nop
 3bc:	0f 90       	pop	r0
 3be:	0f 90       	pop	r0
 3c0:	0f 90       	pop	r0
 3c2:	0f 90       	pop	r0
 3c4:	88 cf       	rjmp	.-240    	; 0x2d6 <main+0x11e>

000003c6 <CH1_led>:
#include <stdint.h>
#include <avr/io.h>

/*------ LED FUNCTIONS ------*/
void CH1_led(uint8_t on){
	if(!on)
 3c6:	81 11       	cpse	r24, r1
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <CH1_led+0x8>
	PORTA &= ~CH1_EN;
 3ca:	db 98       	cbi	0x1b, 3	; 27
 3cc:	08 95       	ret
	else
	PORTA |= CH1_EN;
 3ce:	db 9a       	sbi	0x1b, 3	; 27
 3d0:	08 95       	ret

000003d2 <CH2_led>:
}

void CH2_led(uint8_t on){
	if(!on)
 3d2:	81 11       	cpse	r24, r1
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <CH2_led+0x8>
	PORTA &= ~CH2_EN;
 3d6:	de 98       	cbi	0x1b, 6	; 27
 3d8:	08 95       	ret
	else
	PORTA |= CH2_EN;
 3da:	de 9a       	sbi	0x1b, 6	; 27
 3dc:	08 95       	ret

000003de <CH3_led>:
}

void CH3_led(uint8_t on){
	if(!on)
 3de:	81 11       	cpse	r24, r1
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <CH3_led+0x8>
	PORTC &= ~CH3_EN;
 3e2:	ae 98       	cbi	0x15, 6	; 21
 3e4:	08 95       	ret
	else
	PORTC |= CH3_EN;
 3e6:	ae 9a       	sbi	0x15, 6	; 21
 3e8:	08 95       	ret

000003ea <CH4_led>:
}

void CH4_led(uint8_t on){
	if(!on)
 3ea:	81 11       	cpse	r24, r1
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <CH4_led+0x8>
	PORTC &= ~CH4_EN;
 3ee:	ab 98       	cbi	0x15, 3	; 21
 3f0:	08 95       	ret
	else
	PORTC |= CH4_EN;
 3f2:	ab 9a       	sbi	0x15, 3	; 21
 3f4:	08 95       	ret

000003f6 <green_led>:
}

void green_led(uint8_t on){
	if(!on)
 3f6:	81 11       	cpse	r24, r1
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <green_led+0x8>
	PORTC |= LED_GRN;
 3fa:	a9 9a       	sbi	0x15, 1	; 21
 3fc:	08 95       	ret
	else
	PORTC &= ~LED_GRN;
 3fe:	a9 98       	cbi	0x15, 1	; 21
 400:	08 95       	ret

00000402 <red_led>:
}

void red_led(uint8_t on){
	if(!on)
 402:	81 11       	cpse	r24, r1
 404:	02 c0       	rjmp	.+4      	; 0x40a <red_led+0x8>
	PORTC |= LED_RED;
 406:	aa 9a       	sbi	0x15, 2	; 21
 408:	08 95       	ret
	else
	PORTC &= ~LED_RED;
 40a:	aa 98       	cbi	0x15, 2	; 21
 40c:	08 95       	ret

0000040e <CH1_boost>:
}

/*------ CHANNEL FUNCTIONS ------*/
void CH1_boost(uint8_t on){
	if(!on)
 40e:	81 11       	cpse	r24, r1
 410:	02 c0       	rjmp	.+4      	; 0x416 <CH1_boost+0x8>
	PORTA &= ~CH1_BOOST;
 412:	d9 98       	cbi	0x1b, 1	; 27
 414:	08 95       	ret
	else
	PORTA |= CH1_BOOST;
 416:	d9 9a       	sbi	0x1b, 1	; 27
 418:	08 95       	ret

0000041a <CH2_boost>:
}

void CH2_boost(uint8_t on){
	if(!on)
 41a:	81 11       	cpse	r24, r1
 41c:	02 c0       	rjmp	.+4      	; 0x422 <CH2_boost+0x8>
	PORTA &= ~CH2_BOOST;
 41e:	dc 98       	cbi	0x1b, 4	; 27
 420:	08 95       	ret
	else
	PORTA |= CH2_BOOST;
 422:	dc 9a       	sbi	0x1b, 4	; 27
 424:	08 95       	ret

00000426 <CH3_boost>:
}

void CH3_boost(uint8_t on){
	if(!on)
 426:	81 11       	cpse	r24, r1
 428:	02 c0       	rjmp	.+4      	; 0x42e <CH3_boost+0x8>
	PORTA &= ~CH3_BOOST;
 42a:	df 98       	cbi	0x1b, 7	; 27
 42c:	08 95       	ret
	else
	PORTA |= CH3_BOOST;
 42e:	df 9a       	sbi	0x1b, 7	; 27
 430:	08 95       	ret

00000432 <CH4_boost>:
}

void CH4_boost(uint8_t on){
	if(!on)
 432:	81 11       	cpse	r24, r1
 434:	02 c0       	rjmp	.+4      	; 0x43a <CH4_boost+0x8>
	PORTC &= ~CH4_BOOST;
 436:	ad 98       	cbi	0x15, 5	; 21
 438:	08 95       	ret
	else
	PORTC |= CH4_BOOST;
 43a:	ad 9a       	sbi	0x15, 5	; 21
 43c:	08 95       	ret

0000043e <EN_power>:
}

void EN_power(uint8_t on){
	if(!on)
 43e:	81 11       	cpse	r24, r1
 440:	02 c0       	rjmp	.+4      	; 0x446 <EN_power+0x8>
	PORTA &= ~EN_PWR;
 442:	d8 98       	cbi	0x1b, 0	; 27
 444:	08 95       	ret
	else
	PORTA |= EN_PWR;
 446:	d8 9a       	sbi	0x1b, 0	; 27
 448:	08 95       	ret

0000044a <EN_wifi>:
}

void EN_wifi(uint8_t on){
	if(!on)
 44a:	81 11       	cpse	r24, r1
 44c:	02 c0       	rjmp	.+4      	; 0x452 <EN_wifi+0x8>
	PORTC &= ~WIFI_EN;
 44e:	a8 98       	cbi	0x15, 0	; 21
 450:	08 95       	ret
	else
	PORTC |= WIFI_EN;
 452:	a8 9a       	sbi	0x15, 0	; 21
 454:	08 95       	ret

00000456 <init_PC_serial>:
#include <avr/io.h>
#include <stdio.h>

void init_PC_serial(unsigned int ubrr){
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 456:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (unsigned char)ubrr;
 45a:	89 b9       	out	0x09, r24	; 9
	/*Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 45c:	88 e1       	ldi	r24, 0x18	; 24
 45e:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 1stop bit */
	// UCSR0C = (3<<UCSZ00);
	UCSR0C = (1 << UCSZ00) | (1 << UCSZ01);
 460:	86 e0       	ldi	r24, 0x06	; 6
 462:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 466:	08 95       	ret

00000468 <USART_putchar>:

}

void USART_putchar(unsigned char c, FILE *stream )
{
 468:	cf 93       	push	r28
 46a:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 46c:	8a 30       	cpi	r24, 0x0A	; 10
 46e:	19 f4       	brne	.+6      	; 0x476 <USART_putchar+0xe>
		USART_putchar('\r', stream);
 470:	8d e0       	ldi	r24, 0x0D	; 13
 472:	0e 94 34 02 	call	0x468	; 0x468 <USART_putchar>
	}
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 476:	5d 9b       	sbis	0x0b, 5	; 11
 478:	fe cf       	rjmp	.-4      	; 0x476 <USART_putchar+0xe>
	;
	/* Put data into buffer, sends the data */
	UDR0 = c;
 47a:	cc b9       	out	0x0c, r28	; 12
}
 47c:	cf 91       	pop	r28
 47e:	08 95       	ret

00000480 <USART_getchar>:

void USART_getchar(FILE *stream){
	while( !(UCSR0A & (1<<RXC0)))
 480:	5f 9b       	sbis	0x0b, 7	; 11
 482:	fe cf       	rjmp	.-4      	; 0x480 <USART_getchar>
	;
	return UDR0;
 484:	8c b1       	in	r24, 0x0c	; 12
 486:	08 95       	ret

00000488 <printf>:
 488:	a0 e0       	ldi	r26, 0x00	; 0
 48a:	b0 e0       	ldi	r27, 0x00	; 0
 48c:	ea e4       	ldi	r30, 0x4A	; 74
 48e:	f2 e0       	ldi	r31, 0x02	; 2
 490:	0c 94 18 05 	jmp	0xa30	; 0xa30 <__prologue_saves__+0x20>
 494:	ae 01       	movw	r20, r28
 496:	4b 5f       	subi	r20, 0xFB	; 251
 498:	5f 4f       	sbci	r21, 0xFF	; 255
 49a:	fa 01       	movw	r30, r20
 49c:	61 91       	ld	r22, Z+
 49e:	71 91       	ld	r23, Z+
 4a0:	af 01       	movw	r20, r30
 4a2:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end+0x2>
 4a6:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <__data_end+0x3>
 4aa:	0e 94 8a 02 	call	0x514	; 0x514 <vfprintf>
 4ae:	e2 e0       	ldi	r30, 0x02	; 2
 4b0:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__epilogue_restores__+0x20>

000004b4 <puts>:
 4b4:	0f 93       	push	r16
 4b6:	1f 93       	push	r17
 4b8:	cf 93       	push	r28
 4ba:	df 93       	push	r29
 4bc:	e0 91 66 01 	lds	r30, 0x0166	; 0x800166 <__data_end+0x2>
 4c0:	f0 91 67 01 	lds	r31, 0x0167	; 0x800167 <__data_end+0x3>
 4c4:	23 81       	ldd	r18, Z+3	; 0x03
 4c6:	21 ff       	sbrs	r18, 1
 4c8:	1b c0       	rjmp	.+54     	; 0x500 <puts+0x4c>
 4ca:	8c 01       	movw	r16, r24
 4cc:	d0 e0       	ldi	r29, 0x00	; 0
 4ce:	c0 e0       	ldi	r28, 0x00	; 0
 4d0:	f8 01       	movw	r30, r16
 4d2:	81 91       	ld	r24, Z+
 4d4:	8f 01       	movw	r16, r30
 4d6:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <__data_end+0x2>
 4da:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <__data_end+0x3>
 4de:	db 01       	movw	r26, r22
 4e0:	18 96       	adiw	r26, 0x08	; 8
 4e2:	ed 91       	ld	r30, X+
 4e4:	fc 91       	ld	r31, X
 4e6:	19 97       	sbiw	r26, 0x09	; 9
 4e8:	88 23       	and	r24, r24
 4ea:	31 f0       	breq	.+12     	; 0x4f8 <puts+0x44>
 4ec:	09 95       	icall
 4ee:	89 2b       	or	r24, r25
 4f0:	79 f3       	breq	.-34     	; 0x4d0 <puts+0x1c>
 4f2:	df ef       	ldi	r29, 0xFF	; 255
 4f4:	cf ef       	ldi	r28, 0xFF	; 255
 4f6:	ec cf       	rjmp	.-40     	; 0x4d0 <puts+0x1c>
 4f8:	8a e0       	ldi	r24, 0x0A	; 10
 4fa:	09 95       	icall
 4fc:	89 2b       	or	r24, r25
 4fe:	19 f0       	breq	.+6      	; 0x506 <puts+0x52>
 500:	8f ef       	ldi	r24, 0xFF	; 255
 502:	9f ef       	ldi	r25, 0xFF	; 255
 504:	02 c0       	rjmp	.+4      	; 0x50a <puts+0x56>
 506:	8d 2f       	mov	r24, r29
 508:	9c 2f       	mov	r25, r28
 50a:	df 91       	pop	r29
 50c:	cf 91       	pop	r28
 50e:	1f 91       	pop	r17
 510:	0f 91       	pop	r16
 512:	08 95       	ret

00000514 <vfprintf>:
 514:	ac e0       	ldi	r26, 0x0C	; 12
 516:	b0 e0       	ldi	r27, 0x00	; 0
 518:	e0 e9       	ldi	r30, 0x90	; 144
 51a:	f2 e0       	ldi	r31, 0x02	; 2
 51c:	0c 94 08 05 	jmp	0xa10	; 0xa10 <__prologue_saves__>
 520:	7c 01       	movw	r14, r24
 522:	6b 01       	movw	r12, r22
 524:	8a 01       	movw	r16, r20
 526:	fc 01       	movw	r30, r24
 528:	17 82       	std	Z+7, r1	; 0x07
 52a:	16 82       	std	Z+6, r1	; 0x06
 52c:	83 81       	ldd	r24, Z+3	; 0x03
 52e:	81 ff       	sbrs	r24, 1
 530:	bd c1       	rjmp	.+890    	; 0x8ac <vfprintf+0x398>
 532:	ce 01       	movw	r24, r28
 534:	01 96       	adiw	r24, 0x01	; 1
 536:	4c 01       	movw	r8, r24
 538:	f7 01       	movw	r30, r14
 53a:	93 81       	ldd	r25, Z+3	; 0x03
 53c:	f6 01       	movw	r30, r12
 53e:	93 fd       	sbrc	r25, 3
 540:	85 91       	lpm	r24, Z+
 542:	93 ff       	sbrs	r25, 3
 544:	81 91       	ld	r24, Z+
 546:	6f 01       	movw	r12, r30
 548:	88 23       	and	r24, r24
 54a:	09 f4       	brne	.+2      	; 0x54e <vfprintf+0x3a>
 54c:	ab c1       	rjmp	.+854    	; 0x8a4 <vfprintf+0x390>
 54e:	85 32       	cpi	r24, 0x25	; 37
 550:	39 f4       	brne	.+14     	; 0x560 <vfprintf+0x4c>
 552:	93 fd       	sbrc	r25, 3
 554:	85 91       	lpm	r24, Z+
 556:	93 ff       	sbrs	r25, 3
 558:	81 91       	ld	r24, Z+
 55a:	6f 01       	movw	r12, r30
 55c:	85 32       	cpi	r24, 0x25	; 37
 55e:	29 f4       	brne	.+10     	; 0x56a <vfprintf+0x56>
 560:	b7 01       	movw	r22, r14
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 568:	e7 cf       	rjmp	.-50     	; 0x538 <vfprintf+0x24>
 56a:	51 2c       	mov	r5, r1
 56c:	31 2c       	mov	r3, r1
 56e:	20 e0       	ldi	r18, 0x00	; 0
 570:	20 32       	cpi	r18, 0x20	; 32
 572:	a0 f4       	brcc	.+40     	; 0x59c <vfprintf+0x88>
 574:	8b 32       	cpi	r24, 0x2B	; 43
 576:	69 f0       	breq	.+26     	; 0x592 <vfprintf+0x7e>
 578:	30 f4       	brcc	.+12     	; 0x586 <vfprintf+0x72>
 57a:	80 32       	cpi	r24, 0x20	; 32
 57c:	59 f0       	breq	.+22     	; 0x594 <vfprintf+0x80>
 57e:	83 32       	cpi	r24, 0x23	; 35
 580:	69 f4       	brne	.+26     	; 0x59c <vfprintf+0x88>
 582:	20 61       	ori	r18, 0x10	; 16
 584:	2c c0       	rjmp	.+88     	; 0x5de <vfprintf+0xca>
 586:	8d 32       	cpi	r24, 0x2D	; 45
 588:	39 f0       	breq	.+14     	; 0x598 <vfprintf+0x84>
 58a:	80 33       	cpi	r24, 0x30	; 48
 58c:	39 f4       	brne	.+14     	; 0x59c <vfprintf+0x88>
 58e:	21 60       	ori	r18, 0x01	; 1
 590:	26 c0       	rjmp	.+76     	; 0x5de <vfprintf+0xca>
 592:	22 60       	ori	r18, 0x02	; 2
 594:	24 60       	ori	r18, 0x04	; 4
 596:	23 c0       	rjmp	.+70     	; 0x5de <vfprintf+0xca>
 598:	28 60       	ori	r18, 0x08	; 8
 59a:	21 c0       	rjmp	.+66     	; 0x5de <vfprintf+0xca>
 59c:	27 fd       	sbrc	r18, 7
 59e:	27 c0       	rjmp	.+78     	; 0x5ee <vfprintf+0xda>
 5a0:	30 ed       	ldi	r19, 0xD0	; 208
 5a2:	38 0f       	add	r19, r24
 5a4:	3a 30       	cpi	r19, 0x0A	; 10
 5a6:	78 f4       	brcc	.+30     	; 0x5c6 <vfprintf+0xb2>
 5a8:	26 ff       	sbrs	r18, 6
 5aa:	06 c0       	rjmp	.+12     	; 0x5b8 <vfprintf+0xa4>
 5ac:	fa e0       	ldi	r31, 0x0A	; 10
 5ae:	5f 9e       	mul	r5, r31
 5b0:	30 0d       	add	r19, r0
 5b2:	11 24       	eor	r1, r1
 5b4:	53 2e       	mov	r5, r19
 5b6:	13 c0       	rjmp	.+38     	; 0x5de <vfprintf+0xca>
 5b8:	8a e0       	ldi	r24, 0x0A	; 10
 5ba:	38 9e       	mul	r3, r24
 5bc:	30 0d       	add	r19, r0
 5be:	11 24       	eor	r1, r1
 5c0:	33 2e       	mov	r3, r19
 5c2:	20 62       	ori	r18, 0x20	; 32
 5c4:	0c c0       	rjmp	.+24     	; 0x5de <vfprintf+0xca>
 5c6:	8e 32       	cpi	r24, 0x2E	; 46
 5c8:	21 f4       	brne	.+8      	; 0x5d2 <vfprintf+0xbe>
 5ca:	26 fd       	sbrc	r18, 6
 5cc:	6b c1       	rjmp	.+726    	; 0x8a4 <vfprintf+0x390>
 5ce:	20 64       	ori	r18, 0x40	; 64
 5d0:	06 c0       	rjmp	.+12     	; 0x5de <vfprintf+0xca>
 5d2:	8c 36       	cpi	r24, 0x6C	; 108
 5d4:	11 f4       	brne	.+4      	; 0x5da <vfprintf+0xc6>
 5d6:	20 68       	ori	r18, 0x80	; 128
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <vfprintf+0xca>
 5da:	88 36       	cpi	r24, 0x68	; 104
 5dc:	41 f4       	brne	.+16     	; 0x5ee <vfprintf+0xda>
 5de:	f6 01       	movw	r30, r12
 5e0:	93 fd       	sbrc	r25, 3
 5e2:	85 91       	lpm	r24, Z+
 5e4:	93 ff       	sbrs	r25, 3
 5e6:	81 91       	ld	r24, Z+
 5e8:	6f 01       	movw	r12, r30
 5ea:	81 11       	cpse	r24, r1
 5ec:	c1 cf       	rjmp	.-126    	; 0x570 <vfprintf+0x5c>
 5ee:	98 2f       	mov	r25, r24
 5f0:	9f 7d       	andi	r25, 0xDF	; 223
 5f2:	95 54       	subi	r25, 0x45	; 69
 5f4:	93 30       	cpi	r25, 0x03	; 3
 5f6:	28 f4       	brcc	.+10     	; 0x602 <vfprintf+0xee>
 5f8:	0c 5f       	subi	r16, 0xFC	; 252
 5fa:	1f 4f       	sbci	r17, 0xFF	; 255
 5fc:	ff e3       	ldi	r31, 0x3F	; 63
 5fe:	f9 83       	std	Y+1, r31	; 0x01
 600:	0d c0       	rjmp	.+26     	; 0x61c <vfprintf+0x108>
 602:	83 36       	cpi	r24, 0x63	; 99
 604:	31 f0       	breq	.+12     	; 0x612 <vfprintf+0xfe>
 606:	83 37       	cpi	r24, 0x73	; 115
 608:	71 f0       	breq	.+28     	; 0x626 <vfprintf+0x112>
 60a:	83 35       	cpi	r24, 0x53	; 83
 60c:	09 f0       	breq	.+2      	; 0x610 <vfprintf+0xfc>
 60e:	5b c0       	rjmp	.+182    	; 0x6c6 <vfprintf+0x1b2>
 610:	22 c0       	rjmp	.+68     	; 0x656 <vfprintf+0x142>
 612:	f8 01       	movw	r30, r16
 614:	80 81       	ld	r24, Z
 616:	89 83       	std	Y+1, r24	; 0x01
 618:	0e 5f       	subi	r16, 0xFE	; 254
 61a:	1f 4f       	sbci	r17, 0xFF	; 255
 61c:	44 24       	eor	r4, r4
 61e:	43 94       	inc	r4
 620:	51 2c       	mov	r5, r1
 622:	54 01       	movw	r10, r8
 624:	15 c0       	rjmp	.+42     	; 0x650 <vfprintf+0x13c>
 626:	38 01       	movw	r6, r16
 628:	f2 e0       	ldi	r31, 0x02	; 2
 62a:	6f 0e       	add	r6, r31
 62c:	71 1c       	adc	r7, r1
 62e:	f8 01       	movw	r30, r16
 630:	a0 80       	ld	r10, Z
 632:	b1 80       	ldd	r11, Z+1	; 0x01
 634:	26 ff       	sbrs	r18, 6
 636:	03 c0       	rjmp	.+6      	; 0x63e <vfprintf+0x12a>
 638:	65 2d       	mov	r22, r5
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	02 c0       	rjmp	.+4      	; 0x642 <vfprintf+0x12e>
 63e:	6f ef       	ldi	r22, 0xFF	; 255
 640:	7f ef       	ldi	r23, 0xFF	; 255
 642:	c5 01       	movw	r24, r10
 644:	2c 87       	std	Y+12, r18	; 0x0c
 646:	0e 94 67 04 	call	0x8ce	; 0x8ce <strnlen>
 64a:	2c 01       	movw	r4, r24
 64c:	83 01       	movw	r16, r6
 64e:	2c 85       	ldd	r18, Y+12	; 0x0c
 650:	2f 77       	andi	r18, 0x7F	; 127
 652:	22 2e       	mov	r2, r18
 654:	17 c0       	rjmp	.+46     	; 0x684 <vfprintf+0x170>
 656:	38 01       	movw	r6, r16
 658:	f2 e0       	ldi	r31, 0x02	; 2
 65a:	6f 0e       	add	r6, r31
 65c:	71 1c       	adc	r7, r1
 65e:	f8 01       	movw	r30, r16
 660:	a0 80       	ld	r10, Z
 662:	b1 80       	ldd	r11, Z+1	; 0x01
 664:	26 ff       	sbrs	r18, 6
 666:	03 c0       	rjmp	.+6      	; 0x66e <vfprintf+0x15a>
 668:	65 2d       	mov	r22, r5
 66a:	70 e0       	ldi	r23, 0x00	; 0
 66c:	02 c0       	rjmp	.+4      	; 0x672 <vfprintf+0x15e>
 66e:	6f ef       	ldi	r22, 0xFF	; 255
 670:	7f ef       	ldi	r23, 0xFF	; 255
 672:	c5 01       	movw	r24, r10
 674:	2c 87       	std	Y+12, r18	; 0x0c
 676:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <strnlen_P>
 67a:	2c 01       	movw	r4, r24
 67c:	2c 85       	ldd	r18, Y+12	; 0x0c
 67e:	20 68       	ori	r18, 0x80	; 128
 680:	22 2e       	mov	r2, r18
 682:	83 01       	movw	r16, r6
 684:	23 fc       	sbrc	r2, 3
 686:	1b c0       	rjmp	.+54     	; 0x6be <vfprintf+0x1aa>
 688:	83 2d       	mov	r24, r3
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	48 16       	cp	r4, r24
 68e:	59 06       	cpc	r5, r25
 690:	b0 f4       	brcc	.+44     	; 0x6be <vfprintf+0x1aa>
 692:	b7 01       	movw	r22, r14
 694:	80 e2       	ldi	r24, 0x20	; 32
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 69c:	3a 94       	dec	r3
 69e:	f4 cf       	rjmp	.-24     	; 0x688 <vfprintf+0x174>
 6a0:	f5 01       	movw	r30, r10
 6a2:	27 fc       	sbrc	r2, 7
 6a4:	85 91       	lpm	r24, Z+
 6a6:	27 fe       	sbrs	r2, 7
 6a8:	81 91       	ld	r24, Z+
 6aa:	5f 01       	movw	r10, r30
 6ac:	b7 01       	movw	r22, r14
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 6b4:	31 10       	cpse	r3, r1
 6b6:	3a 94       	dec	r3
 6b8:	f1 e0       	ldi	r31, 0x01	; 1
 6ba:	4f 1a       	sub	r4, r31
 6bc:	51 08       	sbc	r5, r1
 6be:	41 14       	cp	r4, r1
 6c0:	51 04       	cpc	r5, r1
 6c2:	71 f7       	brne	.-36     	; 0x6a0 <vfprintf+0x18c>
 6c4:	e5 c0       	rjmp	.+458    	; 0x890 <vfprintf+0x37c>
 6c6:	84 36       	cpi	r24, 0x64	; 100
 6c8:	11 f0       	breq	.+4      	; 0x6ce <vfprintf+0x1ba>
 6ca:	89 36       	cpi	r24, 0x69	; 105
 6cc:	39 f5       	brne	.+78     	; 0x71c <vfprintf+0x208>
 6ce:	f8 01       	movw	r30, r16
 6d0:	27 ff       	sbrs	r18, 7
 6d2:	07 c0       	rjmp	.+14     	; 0x6e2 <vfprintf+0x1ce>
 6d4:	60 81       	ld	r22, Z
 6d6:	71 81       	ldd	r23, Z+1	; 0x01
 6d8:	82 81       	ldd	r24, Z+2	; 0x02
 6da:	93 81       	ldd	r25, Z+3	; 0x03
 6dc:	0c 5f       	subi	r16, 0xFC	; 252
 6de:	1f 4f       	sbci	r17, 0xFF	; 255
 6e0:	08 c0       	rjmp	.+16     	; 0x6f2 <vfprintf+0x1de>
 6e2:	60 81       	ld	r22, Z
 6e4:	71 81       	ldd	r23, Z+1	; 0x01
 6e6:	07 2e       	mov	r0, r23
 6e8:	00 0c       	add	r0, r0
 6ea:	88 0b       	sbc	r24, r24
 6ec:	99 0b       	sbc	r25, r25
 6ee:	0e 5f       	subi	r16, 0xFE	; 254
 6f0:	1f 4f       	sbci	r17, 0xFF	; 255
 6f2:	2f 76       	andi	r18, 0x6F	; 111
 6f4:	72 2e       	mov	r7, r18
 6f6:	97 ff       	sbrs	r25, 7
 6f8:	09 c0       	rjmp	.+18     	; 0x70c <vfprintf+0x1f8>
 6fa:	90 95       	com	r25
 6fc:	80 95       	com	r24
 6fe:	70 95       	com	r23
 700:	61 95       	neg	r22
 702:	7f 4f       	sbci	r23, 0xFF	; 255
 704:	8f 4f       	sbci	r24, 0xFF	; 255
 706:	9f 4f       	sbci	r25, 0xFF	; 255
 708:	20 68       	ori	r18, 0x80	; 128
 70a:	72 2e       	mov	r7, r18
 70c:	2a e0       	ldi	r18, 0x0A	; 10
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	a4 01       	movw	r20, r8
 712:	0e 94 aa 04 	call	0x954	; 0x954 <__ultoa_invert>
 716:	a8 2e       	mov	r10, r24
 718:	a8 18       	sub	r10, r8
 71a:	44 c0       	rjmp	.+136    	; 0x7a4 <vfprintf+0x290>
 71c:	85 37       	cpi	r24, 0x75	; 117
 71e:	29 f4       	brne	.+10     	; 0x72a <vfprintf+0x216>
 720:	2f 7e       	andi	r18, 0xEF	; 239
 722:	b2 2e       	mov	r11, r18
 724:	2a e0       	ldi	r18, 0x0A	; 10
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	25 c0       	rjmp	.+74     	; 0x774 <vfprintf+0x260>
 72a:	f2 2f       	mov	r31, r18
 72c:	f9 7f       	andi	r31, 0xF9	; 249
 72e:	bf 2e       	mov	r11, r31
 730:	8f 36       	cpi	r24, 0x6F	; 111
 732:	c1 f0       	breq	.+48     	; 0x764 <vfprintf+0x250>
 734:	18 f4       	brcc	.+6      	; 0x73c <vfprintf+0x228>
 736:	88 35       	cpi	r24, 0x58	; 88
 738:	79 f0       	breq	.+30     	; 0x758 <vfprintf+0x244>
 73a:	b4 c0       	rjmp	.+360    	; 0x8a4 <vfprintf+0x390>
 73c:	80 37       	cpi	r24, 0x70	; 112
 73e:	19 f0       	breq	.+6      	; 0x746 <vfprintf+0x232>
 740:	88 37       	cpi	r24, 0x78	; 120
 742:	21 f0       	breq	.+8      	; 0x74c <vfprintf+0x238>
 744:	af c0       	rjmp	.+350    	; 0x8a4 <vfprintf+0x390>
 746:	2f 2f       	mov	r18, r31
 748:	20 61       	ori	r18, 0x10	; 16
 74a:	b2 2e       	mov	r11, r18
 74c:	b4 fe       	sbrs	r11, 4
 74e:	0d c0       	rjmp	.+26     	; 0x76a <vfprintf+0x256>
 750:	8b 2d       	mov	r24, r11
 752:	84 60       	ori	r24, 0x04	; 4
 754:	b8 2e       	mov	r11, r24
 756:	09 c0       	rjmp	.+18     	; 0x76a <vfprintf+0x256>
 758:	24 ff       	sbrs	r18, 4
 75a:	0a c0       	rjmp	.+20     	; 0x770 <vfprintf+0x25c>
 75c:	9f 2f       	mov	r25, r31
 75e:	96 60       	ori	r25, 0x06	; 6
 760:	b9 2e       	mov	r11, r25
 762:	06 c0       	rjmp	.+12     	; 0x770 <vfprintf+0x25c>
 764:	28 e0       	ldi	r18, 0x08	; 8
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	05 c0       	rjmp	.+10     	; 0x774 <vfprintf+0x260>
 76a:	20 e1       	ldi	r18, 0x10	; 16
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	02 c0       	rjmp	.+4      	; 0x774 <vfprintf+0x260>
 770:	20 e1       	ldi	r18, 0x10	; 16
 772:	32 e0       	ldi	r19, 0x02	; 2
 774:	f8 01       	movw	r30, r16
 776:	b7 fe       	sbrs	r11, 7
 778:	07 c0       	rjmp	.+14     	; 0x788 <vfprintf+0x274>
 77a:	60 81       	ld	r22, Z
 77c:	71 81       	ldd	r23, Z+1	; 0x01
 77e:	82 81       	ldd	r24, Z+2	; 0x02
 780:	93 81       	ldd	r25, Z+3	; 0x03
 782:	0c 5f       	subi	r16, 0xFC	; 252
 784:	1f 4f       	sbci	r17, 0xFF	; 255
 786:	06 c0       	rjmp	.+12     	; 0x794 <vfprintf+0x280>
 788:	60 81       	ld	r22, Z
 78a:	71 81       	ldd	r23, Z+1	; 0x01
 78c:	80 e0       	ldi	r24, 0x00	; 0
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	0e 5f       	subi	r16, 0xFE	; 254
 792:	1f 4f       	sbci	r17, 0xFF	; 255
 794:	a4 01       	movw	r20, r8
 796:	0e 94 aa 04 	call	0x954	; 0x954 <__ultoa_invert>
 79a:	a8 2e       	mov	r10, r24
 79c:	a8 18       	sub	r10, r8
 79e:	fb 2d       	mov	r31, r11
 7a0:	ff 77       	andi	r31, 0x7F	; 127
 7a2:	7f 2e       	mov	r7, r31
 7a4:	76 fe       	sbrs	r7, 6
 7a6:	0b c0       	rjmp	.+22     	; 0x7be <vfprintf+0x2aa>
 7a8:	37 2d       	mov	r19, r7
 7aa:	3e 7f       	andi	r19, 0xFE	; 254
 7ac:	a5 14       	cp	r10, r5
 7ae:	50 f4       	brcc	.+20     	; 0x7c4 <vfprintf+0x2b0>
 7b0:	74 fe       	sbrs	r7, 4
 7b2:	0a c0       	rjmp	.+20     	; 0x7c8 <vfprintf+0x2b4>
 7b4:	72 fc       	sbrc	r7, 2
 7b6:	08 c0       	rjmp	.+16     	; 0x7c8 <vfprintf+0x2b4>
 7b8:	37 2d       	mov	r19, r7
 7ba:	3e 7e       	andi	r19, 0xEE	; 238
 7bc:	05 c0       	rjmp	.+10     	; 0x7c8 <vfprintf+0x2b4>
 7be:	ba 2c       	mov	r11, r10
 7c0:	37 2d       	mov	r19, r7
 7c2:	03 c0       	rjmp	.+6      	; 0x7ca <vfprintf+0x2b6>
 7c4:	ba 2c       	mov	r11, r10
 7c6:	01 c0       	rjmp	.+2      	; 0x7ca <vfprintf+0x2b6>
 7c8:	b5 2c       	mov	r11, r5
 7ca:	34 ff       	sbrs	r19, 4
 7cc:	0d c0       	rjmp	.+26     	; 0x7e8 <vfprintf+0x2d4>
 7ce:	fe 01       	movw	r30, r28
 7d0:	ea 0d       	add	r30, r10
 7d2:	f1 1d       	adc	r31, r1
 7d4:	80 81       	ld	r24, Z
 7d6:	80 33       	cpi	r24, 0x30	; 48
 7d8:	11 f4       	brne	.+4      	; 0x7de <vfprintf+0x2ca>
 7da:	39 7e       	andi	r19, 0xE9	; 233
 7dc:	09 c0       	rjmp	.+18     	; 0x7f0 <vfprintf+0x2dc>
 7de:	32 ff       	sbrs	r19, 2
 7e0:	06 c0       	rjmp	.+12     	; 0x7ee <vfprintf+0x2da>
 7e2:	b3 94       	inc	r11
 7e4:	b3 94       	inc	r11
 7e6:	04 c0       	rjmp	.+8      	; 0x7f0 <vfprintf+0x2dc>
 7e8:	83 2f       	mov	r24, r19
 7ea:	86 78       	andi	r24, 0x86	; 134
 7ec:	09 f0       	breq	.+2      	; 0x7f0 <vfprintf+0x2dc>
 7ee:	b3 94       	inc	r11
 7f0:	33 fd       	sbrc	r19, 3
 7f2:	13 c0       	rjmp	.+38     	; 0x81a <vfprintf+0x306>
 7f4:	30 ff       	sbrs	r19, 0
 7f6:	06 c0       	rjmp	.+12     	; 0x804 <vfprintf+0x2f0>
 7f8:	5a 2c       	mov	r5, r10
 7fa:	b3 14       	cp	r11, r3
 7fc:	18 f4       	brcc	.+6      	; 0x804 <vfprintf+0x2f0>
 7fe:	53 0c       	add	r5, r3
 800:	5b 18       	sub	r5, r11
 802:	b3 2c       	mov	r11, r3
 804:	b3 14       	cp	r11, r3
 806:	68 f4       	brcc	.+26     	; 0x822 <vfprintf+0x30e>
 808:	b7 01       	movw	r22, r14
 80a:	80 e2       	ldi	r24, 0x20	; 32
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	3c 87       	std	Y+12, r19	; 0x0c
 810:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 814:	b3 94       	inc	r11
 816:	3c 85       	ldd	r19, Y+12	; 0x0c
 818:	f5 cf       	rjmp	.-22     	; 0x804 <vfprintf+0x2f0>
 81a:	b3 14       	cp	r11, r3
 81c:	10 f4       	brcc	.+4      	; 0x822 <vfprintf+0x30e>
 81e:	3b 18       	sub	r3, r11
 820:	01 c0       	rjmp	.+2      	; 0x824 <vfprintf+0x310>
 822:	31 2c       	mov	r3, r1
 824:	34 ff       	sbrs	r19, 4
 826:	12 c0       	rjmp	.+36     	; 0x84c <vfprintf+0x338>
 828:	b7 01       	movw	r22, r14
 82a:	80 e3       	ldi	r24, 0x30	; 48
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	3c 87       	std	Y+12, r19	; 0x0c
 830:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 834:	3c 85       	ldd	r19, Y+12	; 0x0c
 836:	32 ff       	sbrs	r19, 2
 838:	17 c0       	rjmp	.+46     	; 0x868 <vfprintf+0x354>
 83a:	31 fd       	sbrc	r19, 1
 83c:	03 c0       	rjmp	.+6      	; 0x844 <vfprintf+0x330>
 83e:	88 e7       	ldi	r24, 0x78	; 120
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	02 c0       	rjmp	.+4      	; 0x848 <vfprintf+0x334>
 844:	88 e5       	ldi	r24, 0x58	; 88
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	b7 01       	movw	r22, r14
 84a:	0c c0       	rjmp	.+24     	; 0x864 <vfprintf+0x350>
 84c:	83 2f       	mov	r24, r19
 84e:	86 78       	andi	r24, 0x86	; 134
 850:	59 f0       	breq	.+22     	; 0x868 <vfprintf+0x354>
 852:	31 ff       	sbrs	r19, 1
 854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0x346>
 856:	8b e2       	ldi	r24, 0x2B	; 43
 858:	01 c0       	rjmp	.+2      	; 0x85c <vfprintf+0x348>
 85a:	80 e2       	ldi	r24, 0x20	; 32
 85c:	37 fd       	sbrc	r19, 7
 85e:	8d e2       	ldi	r24, 0x2D	; 45
 860:	b7 01       	movw	r22, r14
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 868:	a5 14       	cp	r10, r5
 86a:	38 f4       	brcc	.+14     	; 0x87a <vfprintf+0x366>
 86c:	b7 01       	movw	r22, r14
 86e:	80 e3       	ldi	r24, 0x30	; 48
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 876:	5a 94       	dec	r5
 878:	f7 cf       	rjmp	.-18     	; 0x868 <vfprintf+0x354>
 87a:	aa 94       	dec	r10
 87c:	f4 01       	movw	r30, r8
 87e:	ea 0d       	add	r30, r10
 880:	f1 1d       	adc	r31, r1
 882:	80 81       	ld	r24, Z
 884:	b7 01       	movw	r22, r14
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 88c:	a1 10       	cpse	r10, r1
 88e:	f5 cf       	rjmp	.-22     	; 0x87a <vfprintf+0x366>
 890:	33 20       	and	r3, r3
 892:	09 f4       	brne	.+2      	; 0x896 <vfprintf+0x382>
 894:	51 ce       	rjmp	.-862    	; 0x538 <vfprintf+0x24>
 896:	b7 01       	movw	r22, r14
 898:	80 e2       	ldi	r24, 0x20	; 32
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	0e 94 72 04 	call	0x8e4	; 0x8e4 <fputc>
 8a0:	3a 94       	dec	r3
 8a2:	f6 cf       	rjmp	.-20     	; 0x890 <vfprintf+0x37c>
 8a4:	f7 01       	movw	r30, r14
 8a6:	86 81       	ldd	r24, Z+6	; 0x06
 8a8:	97 81       	ldd	r25, Z+7	; 0x07
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <vfprintf+0x39c>
 8ac:	8f ef       	ldi	r24, 0xFF	; 255
 8ae:	9f ef       	ldi	r25, 0xFF	; 255
 8b0:	2c 96       	adiw	r28, 0x0c	; 12
 8b2:	e2 e1       	ldi	r30, 0x12	; 18
 8b4:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__epilogue_restores__>

000008b8 <strnlen_P>:
 8b8:	fc 01       	movw	r30, r24
 8ba:	05 90       	lpm	r0, Z+
 8bc:	61 50       	subi	r22, 0x01	; 1
 8be:	70 40       	sbci	r23, 0x00	; 0
 8c0:	01 10       	cpse	r0, r1
 8c2:	d8 f7       	brcc	.-10     	; 0x8ba <strnlen_P+0x2>
 8c4:	80 95       	com	r24
 8c6:	90 95       	com	r25
 8c8:	8e 0f       	add	r24, r30
 8ca:	9f 1f       	adc	r25, r31
 8cc:	08 95       	ret

000008ce <strnlen>:
 8ce:	fc 01       	movw	r30, r24
 8d0:	61 50       	subi	r22, 0x01	; 1
 8d2:	70 40       	sbci	r23, 0x00	; 0
 8d4:	01 90       	ld	r0, Z+
 8d6:	01 10       	cpse	r0, r1
 8d8:	d8 f7       	brcc	.-10     	; 0x8d0 <strnlen+0x2>
 8da:	80 95       	com	r24
 8dc:	90 95       	com	r25
 8de:	8e 0f       	add	r24, r30
 8e0:	9f 1f       	adc	r25, r31
 8e2:	08 95       	ret

000008e4 <fputc>:
 8e4:	0f 93       	push	r16
 8e6:	1f 93       	push	r17
 8e8:	cf 93       	push	r28
 8ea:	df 93       	push	r29
 8ec:	fb 01       	movw	r30, r22
 8ee:	23 81       	ldd	r18, Z+3	; 0x03
 8f0:	21 fd       	sbrc	r18, 1
 8f2:	03 c0       	rjmp	.+6      	; 0x8fa <fputc+0x16>
 8f4:	8f ef       	ldi	r24, 0xFF	; 255
 8f6:	9f ef       	ldi	r25, 0xFF	; 255
 8f8:	28 c0       	rjmp	.+80     	; 0x94a <fputc+0x66>
 8fa:	22 ff       	sbrs	r18, 2
 8fc:	16 c0       	rjmp	.+44     	; 0x92a <fputc+0x46>
 8fe:	46 81       	ldd	r20, Z+6	; 0x06
 900:	57 81       	ldd	r21, Z+7	; 0x07
 902:	24 81       	ldd	r18, Z+4	; 0x04
 904:	35 81       	ldd	r19, Z+5	; 0x05
 906:	42 17       	cp	r20, r18
 908:	53 07       	cpc	r21, r19
 90a:	44 f4       	brge	.+16     	; 0x91c <fputc+0x38>
 90c:	a0 81       	ld	r26, Z
 90e:	b1 81       	ldd	r27, Z+1	; 0x01
 910:	9d 01       	movw	r18, r26
 912:	2f 5f       	subi	r18, 0xFF	; 255
 914:	3f 4f       	sbci	r19, 0xFF	; 255
 916:	31 83       	std	Z+1, r19	; 0x01
 918:	20 83       	st	Z, r18
 91a:	8c 93       	st	X, r24
 91c:	26 81       	ldd	r18, Z+6	; 0x06
 91e:	37 81       	ldd	r19, Z+7	; 0x07
 920:	2f 5f       	subi	r18, 0xFF	; 255
 922:	3f 4f       	sbci	r19, 0xFF	; 255
 924:	37 83       	std	Z+7, r19	; 0x07
 926:	26 83       	std	Z+6, r18	; 0x06
 928:	10 c0       	rjmp	.+32     	; 0x94a <fputc+0x66>
 92a:	eb 01       	movw	r28, r22
 92c:	09 2f       	mov	r16, r25
 92e:	18 2f       	mov	r17, r24
 930:	00 84       	ldd	r0, Z+8	; 0x08
 932:	f1 85       	ldd	r31, Z+9	; 0x09
 934:	e0 2d       	mov	r30, r0
 936:	09 95       	icall
 938:	89 2b       	or	r24, r25
 93a:	e1 f6       	brne	.-72     	; 0x8f4 <fputc+0x10>
 93c:	8e 81       	ldd	r24, Y+6	; 0x06
 93e:	9f 81       	ldd	r25, Y+7	; 0x07
 940:	01 96       	adiw	r24, 0x01	; 1
 942:	9f 83       	std	Y+7, r25	; 0x07
 944:	8e 83       	std	Y+6, r24	; 0x06
 946:	81 2f       	mov	r24, r17
 948:	90 2f       	mov	r25, r16
 94a:	df 91       	pop	r29
 94c:	cf 91       	pop	r28
 94e:	1f 91       	pop	r17
 950:	0f 91       	pop	r16
 952:	08 95       	ret

00000954 <__ultoa_invert>:
 954:	fa 01       	movw	r30, r20
 956:	aa 27       	eor	r26, r26
 958:	28 30       	cpi	r18, 0x08	; 8
 95a:	51 f1       	breq	.+84     	; 0x9b0 <__ultoa_invert+0x5c>
 95c:	20 31       	cpi	r18, 0x10	; 16
 95e:	81 f1       	breq	.+96     	; 0x9c0 <__ultoa_invert+0x6c>
 960:	e8 94       	clt
 962:	6f 93       	push	r22
 964:	6e 7f       	andi	r22, 0xFE	; 254
 966:	6e 5f       	subi	r22, 0xFE	; 254
 968:	7f 4f       	sbci	r23, 0xFF	; 255
 96a:	8f 4f       	sbci	r24, 0xFF	; 255
 96c:	9f 4f       	sbci	r25, 0xFF	; 255
 96e:	af 4f       	sbci	r26, 0xFF	; 255
 970:	b1 e0       	ldi	r27, 0x01	; 1
 972:	3e d0       	rcall	.+124    	; 0x9f0 <__ultoa_invert+0x9c>
 974:	b4 e0       	ldi	r27, 0x04	; 4
 976:	3c d0       	rcall	.+120    	; 0x9f0 <__ultoa_invert+0x9c>
 978:	67 0f       	add	r22, r23
 97a:	78 1f       	adc	r23, r24
 97c:	89 1f       	adc	r24, r25
 97e:	9a 1f       	adc	r25, r26
 980:	a1 1d       	adc	r26, r1
 982:	68 0f       	add	r22, r24
 984:	79 1f       	adc	r23, r25
 986:	8a 1f       	adc	r24, r26
 988:	91 1d       	adc	r25, r1
 98a:	a1 1d       	adc	r26, r1
 98c:	6a 0f       	add	r22, r26
 98e:	71 1d       	adc	r23, r1
 990:	81 1d       	adc	r24, r1
 992:	91 1d       	adc	r25, r1
 994:	a1 1d       	adc	r26, r1
 996:	20 d0       	rcall	.+64     	; 0x9d8 <__ultoa_invert+0x84>
 998:	09 f4       	brne	.+2      	; 0x99c <__ultoa_invert+0x48>
 99a:	68 94       	set
 99c:	3f 91       	pop	r19
 99e:	2a e0       	ldi	r18, 0x0A	; 10
 9a0:	26 9f       	mul	r18, r22
 9a2:	11 24       	eor	r1, r1
 9a4:	30 19       	sub	r19, r0
 9a6:	30 5d       	subi	r19, 0xD0	; 208
 9a8:	31 93       	st	Z+, r19
 9aa:	de f6       	brtc	.-74     	; 0x962 <__ultoa_invert+0xe>
 9ac:	cf 01       	movw	r24, r30
 9ae:	08 95       	ret
 9b0:	46 2f       	mov	r20, r22
 9b2:	47 70       	andi	r20, 0x07	; 7
 9b4:	40 5d       	subi	r20, 0xD0	; 208
 9b6:	41 93       	st	Z+, r20
 9b8:	b3 e0       	ldi	r27, 0x03	; 3
 9ba:	0f d0       	rcall	.+30     	; 0x9da <__ultoa_invert+0x86>
 9bc:	c9 f7       	brne	.-14     	; 0x9b0 <__ultoa_invert+0x5c>
 9be:	f6 cf       	rjmp	.-20     	; 0x9ac <__ultoa_invert+0x58>
 9c0:	46 2f       	mov	r20, r22
 9c2:	4f 70       	andi	r20, 0x0F	; 15
 9c4:	40 5d       	subi	r20, 0xD0	; 208
 9c6:	4a 33       	cpi	r20, 0x3A	; 58
 9c8:	18 f0       	brcs	.+6      	; 0x9d0 <__ultoa_invert+0x7c>
 9ca:	49 5d       	subi	r20, 0xD9	; 217
 9cc:	31 fd       	sbrc	r19, 1
 9ce:	40 52       	subi	r20, 0x20	; 32
 9d0:	41 93       	st	Z+, r20
 9d2:	02 d0       	rcall	.+4      	; 0x9d8 <__ultoa_invert+0x84>
 9d4:	a9 f7       	brne	.-22     	; 0x9c0 <__ultoa_invert+0x6c>
 9d6:	ea cf       	rjmp	.-44     	; 0x9ac <__ultoa_invert+0x58>
 9d8:	b4 e0       	ldi	r27, 0x04	; 4
 9da:	a6 95       	lsr	r26
 9dc:	97 95       	ror	r25
 9de:	87 95       	ror	r24
 9e0:	77 95       	ror	r23
 9e2:	67 95       	ror	r22
 9e4:	ba 95       	dec	r27
 9e6:	c9 f7       	brne	.-14     	; 0x9da <__ultoa_invert+0x86>
 9e8:	00 97       	sbiw	r24, 0x00	; 0
 9ea:	61 05       	cpc	r22, r1
 9ec:	71 05       	cpc	r23, r1
 9ee:	08 95       	ret
 9f0:	9b 01       	movw	r18, r22
 9f2:	ac 01       	movw	r20, r24
 9f4:	0a 2e       	mov	r0, r26
 9f6:	06 94       	lsr	r0
 9f8:	57 95       	ror	r21
 9fa:	47 95       	ror	r20
 9fc:	37 95       	ror	r19
 9fe:	27 95       	ror	r18
 a00:	ba 95       	dec	r27
 a02:	c9 f7       	brne	.-14     	; 0x9f6 <__ultoa_invert+0xa2>
 a04:	62 0f       	add	r22, r18
 a06:	73 1f       	adc	r23, r19
 a08:	84 1f       	adc	r24, r20
 a0a:	95 1f       	adc	r25, r21
 a0c:	a0 1d       	adc	r26, r0
 a0e:	08 95       	ret

00000a10 <__prologue_saves__>:
 a10:	2f 92       	push	r2
 a12:	3f 92       	push	r3
 a14:	4f 92       	push	r4
 a16:	5f 92       	push	r5
 a18:	6f 92       	push	r6
 a1a:	7f 92       	push	r7
 a1c:	8f 92       	push	r8
 a1e:	9f 92       	push	r9
 a20:	af 92       	push	r10
 a22:	bf 92       	push	r11
 a24:	cf 92       	push	r12
 a26:	df 92       	push	r13
 a28:	ef 92       	push	r14
 a2a:	ff 92       	push	r15
 a2c:	0f 93       	push	r16
 a2e:	1f 93       	push	r17
 a30:	cf 93       	push	r28
 a32:	df 93       	push	r29
 a34:	cd b7       	in	r28, 0x3d	; 61
 a36:	de b7       	in	r29, 0x3e	; 62
 a38:	ca 1b       	sub	r28, r26
 a3a:	db 0b       	sbc	r29, r27
 a3c:	0f b6       	in	r0, 0x3f	; 63
 a3e:	f8 94       	cli
 a40:	de bf       	out	0x3e, r29	; 62
 a42:	0f be       	out	0x3f, r0	; 63
 a44:	cd bf       	out	0x3d, r28	; 61
 a46:	09 94       	ijmp

00000a48 <__epilogue_restores__>:
 a48:	2a 88       	ldd	r2, Y+18	; 0x12
 a4a:	39 88       	ldd	r3, Y+17	; 0x11
 a4c:	48 88       	ldd	r4, Y+16	; 0x10
 a4e:	5f 84       	ldd	r5, Y+15	; 0x0f
 a50:	6e 84       	ldd	r6, Y+14	; 0x0e
 a52:	7d 84       	ldd	r7, Y+13	; 0x0d
 a54:	8c 84       	ldd	r8, Y+12	; 0x0c
 a56:	9b 84       	ldd	r9, Y+11	; 0x0b
 a58:	aa 84       	ldd	r10, Y+10	; 0x0a
 a5a:	b9 84       	ldd	r11, Y+9	; 0x09
 a5c:	c8 84       	ldd	r12, Y+8	; 0x08
 a5e:	df 80       	ldd	r13, Y+7	; 0x07
 a60:	ee 80       	ldd	r14, Y+6	; 0x06
 a62:	fd 80       	ldd	r15, Y+5	; 0x05
 a64:	0c 81       	ldd	r16, Y+4	; 0x04
 a66:	1b 81       	ldd	r17, Y+3	; 0x03
 a68:	aa 81       	ldd	r26, Y+2	; 0x02
 a6a:	b9 81       	ldd	r27, Y+1	; 0x01
 a6c:	ce 0f       	add	r28, r30
 a6e:	d1 1d       	adc	r29, r1
 a70:	0f b6       	in	r0, 0x3f	; 63
 a72:	f8 94       	cli
 a74:	de bf       	out	0x3e, r29	; 62
 a76:	0f be       	out	0x3f, r0	; 63
 a78:	cd bf       	out	0x3d, r28	; 61
 a7a:	ed 01       	movw	r28, r26
 a7c:	08 95       	ret

00000a7e <_exit>:
 a7e:	f8 94       	cli

00000a80 <__stop_program>:
 a80:	ff cf       	rjmp	.-2      	; 0xa80 <__stop_program>
